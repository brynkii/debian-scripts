#!/bin/bash

GREEN='\e[32m'
RC='\e[0m\n'
YELLOW='\e[33m'

# check whether it is a server or a desktop install


# if desktop choose desktop environment



# Check whether its wayland or xorg
install_xorg() {
  # base install
  sudo apt install -y xorg xserver-xorg xbacklight xbindkeys xvkbd xinput build-essential
  # create folders in user directory
  xdg-user-dirs-update
  # custom install
  sudo apt install -y dialog mtools dosfstools avahi-daemon acpi acpid gvfs-backends xfce4-power-manager

  sudo systemctl enable avahi-daemon
  sudo systemctl enable acpid

  # Networking etc
  sudo apt install -y policykit-1-gnome network-manager network-manager-gnome

  # Thunar
  sudo apt install -y thunar thunar-archive-plugin thunar-volman file-roller

  # Terminal (eg. terminator,kitty,xfce4-terminal)
  sudo apt install -y kitty taskwarrior fzf fortune zoxide tmux aptitude newsboat trash-cli ripgrep btop flameshot stow fdupes sox parallel

  # Sound packages
  sudo apt install -y pulseaudio alsa-utils pavucontrol volumeicon-alsa pamixer

  # programming tools
  sudo apt install -y pipx 

  # Browser Installation (eg. chromium)
  sudo apt install -y firefox-esr qbittorrent

  # Hardware tools
  sudo apt-get install -y lm-sensors lsscsi playerctl tlp

  # Printing and bluetooth (if needed)
  sudo apt install -y cups system-config-printer simple-scan
  sudo apt install -y bluez blueman

  sudo systemctl enable cups
  sudo systemctl enable bluetooth
  sudo apt install -y picom rofi dunst libnotify-bin unzip wmctrl xdotool libnotify-dev

  # Multimedia/GFX
  sudo apt install -y mpv scrot gimp redshift 

  # pdf
  sudo apt install -y zathura zathura-ps zathura-djvu zathura-cb

  # Others
  sudo apt install -y figlet cpu-x udns-utils whois curl tree 

  # Install Lightdm Console Display Manager
  sudo apt install -y lightdm lightdm-gtk-greeter-settings
  sudo systemctl enable lightdm

  # install starship
  curl -sS https://starship.rs/install.sh | sh
}


# virtualize with kvm
install_kvm() {
  printf "${YELLOW}Does the computer permit virtualization.${RC}"
  egrep -c '(vmx|svm)' /proc/cpuinfo
  sudo apt install qemu-kvm qemu-system qemu-utils python3 python3-pip libvirt-clients libvirt-daemon-system bridge-utils virtinst libvirt-daemon virt-manager -y
  printf "${GREEN}QEMU has been installed.${RC}"
  sudo systemctl enable libvirtd
  sudo systemctl start libvirtd
  sudo systemctl status libvirtd.service
  printf "${YELLOW}starting libvirt.d service. Checking default network for networking.${RC}"
  sudo virsh net-start default
  sudo virsh net-autostart default
  sudo virsh net-list --all
  printf "${YELLOW}Adding user to libvirtd to allow access to VMs.${RC}"
  sudo usermod -aG libvirt $USER
  sudo usermod -aG libvirt-qemu $USER
  sudo usermod -aG kvm $USER
  sudo usermod -aG input $USER
  sudo usermod -aG disk $USER
  printf "${GREEN}The Process has been successful you can now reboot.${RC}"
}
